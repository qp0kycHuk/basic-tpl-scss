@function rgbValuesFromHex($hex) {
  @return red($hex),
  green($hex),
  blue($hex);
}

@mixin getColors($color, $name) {
  @if ($name=='primary'or $name=='second'or $name=='black'or $name=='white') {
    $rgb                   : rgbValuesFromHex($color);
    --color-#{$name}       : #{$color};
    --color-#{$name}-10    : rgba(#{$rgb}, 0.10);
    --color-#{$name}-20    : rgba(#{$rgb}, 0.20);
    --color-#{$name}-30    : rgba(#{$rgb}, 0.30);
    --color-#{$name}-40    : rgba(#{$rgb}, 0.40);
    --color-#{$name}-50    : rgba(#{$rgb}, 0.50);
    --color-#{$name}-60    : rgba(#{$rgb}, 0.60);
    --color-#{$name}-70    : rgba(#{$rgb}, 0.70);
    --color-#{$name}-80    : rgba(#{$rgb}, 0.80);
    --color-#{$name}-90    : rgba(#{$rgb}, 0.90);
    --color-#{$name}--light: #{lighten($color, 5%)};
    --color-#{$name}--dark : #{darken($color, 5%)};
  }

  @else {
    --color-#{$name}: #{$color};
  }
}

@mixin AddMedia() {
  @content;

  &-md {
    @media (min-width:$md) {
      @content;
    }
  }

  &-lg {
    @media (min-width:$lg) {
      @content;
    }
  }
}

@mixin getAlignItemsAndContent($property) {
  .#{$property} {
    &-start {
      #{$property}: flex-start;
    }

    &-center {
      #{$property}: center;
    }

    &-end {
      #{$property}: flex-end;
    }

    &-stretch {
      #{$property}: stretch;
    }

    @if ($property=='align-content'or $property=='justify-content') {
      &-between {
        #{$property}: space-between;
      }

      &-around {
        #{$property}: space-around;
      }

      &-evenly {
        #{$property}: space-evenly;
      }
    }
  }
}

@mixin getWidthOrHeight($value) {
  @include AddMedia {
    &-100 {
      #{$value}: 100%;
    }
  
    &-50 {
      #{$value}: 50%;
    }
  
    &-0 {
      #{$value}: 0;
    }
  
    &-content {
      #{$value}: max-content;
    }
  
    &-auto {
      #{$value}: auto !important;
    }
  }
}